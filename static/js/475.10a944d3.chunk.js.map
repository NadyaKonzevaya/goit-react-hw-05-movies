{"version":3,"file":"static/js/475.10a944d3.chunk.js","mappings":"6OAsCA,EAjCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,sBAA0BC,KAAKL,EAChC,GAAE,KAGD,iCACE,4CACA,wBACGD,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAASC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMV,GAA5C,SACGO,KAFID,EADC,QAUnB,C,kCC1BKK,EAAW,4BACXC,EAAU,mCAyEVT,EAAM,CACVU,oBAvE0B,WAC1B,OAAOC,EAAAA,GAAAA,IAAA,UACGH,EADH,yCAC4CC,IAChDR,MAAK,SAAAW,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAd,MAAK,SAAAc,GACJ,OAAOA,EAAKC,OACb,GACJ,EA4DCC,eA1DqB,SAAAC,GACrB,OAAOP,EAAAA,GAAAA,IAAA,UACGH,EADH,mCACsCC,EADtC,kBACuDS,IAC3DjB,MAAK,SAAAW,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAd,MAAK,SAAAc,GACJ,OAAOA,EAAKC,OACb,GACJ,EA+CCG,eA7CqB,SAAAC,GACrB,OAAOT,EAAAA,GAAAA,IAAA,UACGH,EADH,oBACuBY,EADvB,oBAC0CX,IAC9CR,MAAK,SAAAW,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAd,MAAK,SAAAc,GACJ,OAAOA,CACR,GACJ,EAkCCM,kBAhCwB,SAAAD,GACxB,OAAOT,EAAAA,GAAAA,IAAA,UACGH,EADH,oBACuBY,EADvB,4BACkDX,IACtDR,MAAK,SAAAW,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAd,MAAK,SAAAc,GACJ,OAAOA,EAAKC,OACb,GACJ,EAqBCM,eAnBqB,SAAAF,GACrB,OAAOT,EAAAA,GAAAA,IAAA,UACGH,EADH,oBACuBY,EADvB,4BACkDX,IACtDR,MAAK,SAAAW,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAd,MAAK,SAAAc,GACJ,OAAOA,EAAKQ,IACb,GACJ,GAUD,K","sources":["pages/Home/Home.js","services/api.js"],"sourcesContent":["import API from 'services/api';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    API.fetchTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <NavLink to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default Home;\n","import axios from 'axios';\nconst BASE_URL = 'http://api.themoviedb.org';\nconst API_KEY = '35b67d916044ed61f84d01dde3676d84';\n// const axios = require('axios').default;\n\nconst fetchTrendingMovies = () => {\n  return axios\n    .get(`${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchAllMovies = queryTitle => {\n  return axios\n    .get(`${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${queryTitle}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchMovieInfo = movieId => {\n  return axios\n    .get(`${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data;\n    });\n};\n\nconst fetchMovieReviews = movieId => {\n  return axios\n    .get(`${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchMovieCast = movieId => {\n  return axios\n    .get(`${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.cast;\n    });\n};\n\nconst API = {\n  fetchTrendingMovies,\n  fetchAllMovies,\n  fetchMovieInfo,\n  fetchMovieReviews,\n  fetchMovieCast,\n};\n\nexport default API;\n\n// function fetchPokemon(name) {\n//   return fetch(`https://pokeapi.co/api/v2/pokemon/${name}`).then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     }\n\n//     return Promise.reject(new Error(`Нет покемона с именем ${name}`));\n//   });\n// }\n\n// const api = {\n//   fetchPokemon,\n// };\n\n// export default api;\n"],"names":["useState","movies","setMovies","location","useLocation","useEffect","API","then","map","id","title","to","state","from","BASE_URL","API_KEY","fetchTrendingMovies","axios","response","status","Error","data","results","fetchAllMovies","queryTitle","fetchMovieInfo","movieId","fetchMovieReviews","fetchMovieCast","cast"],"sourceRoot":""}