{"version":3,"file":"static/js/147.176c602a.chunk.js","mappings":"sOAEaA,E,OAAWC,GAAAA,GAAH,2G,kBCkDrB,EA3Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,IAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eAAmBN,GAASO,KAAKH,EAClC,GAAE,CAACJ,IAECG,EAGL,OACE,wBACGA,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAACd,EAAD,WACGc,GACC,gBACEC,IAAI,QACJC,IAAG,UApBM,mCAoBN,OAAsBF,GACzBG,MAAM,SAGR,gBAAKD,IAAKE,EAAaH,IAAI,cAAcE,MAAM,MAAME,OAAO,SAE9D,0BAAOP,KACP,0CAAkBC,OAXLF,EADP,KAiBf,C,kCCtCKS,EAAW,4BACXC,EAAU,mCAyEVb,EAAM,CACVc,oBAvE0B,WAC1B,OAAOC,EAAAA,GAAAA,IAAA,UACGH,EADH,yCAC4CC,IAChDZ,MAAK,SAAAe,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAlB,MAAK,SAAAkB,GACJ,OAAOA,EAAKC,OACb,GACJ,EA4DCC,eA1DqB,SAAAC,GACrB,OAAOP,EAAAA,GAAAA,IAAA,UACGH,EADH,mCACsCC,EADtC,kBACuDS,IAC3DrB,MAAK,SAAAe,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAlB,MAAK,SAAAkB,GACJ,OAAOA,EAAKC,OACb,GACJ,EA+CCG,eA7CqB,SAAA7B,GACrB,OAAOqB,EAAAA,GAAAA,IAAA,UACGH,EADH,oBACuBlB,EADvB,oBAC0CmB,IAC9CZ,MAAK,SAAAe,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAlB,MAAK,SAAAkB,GACJ,OAAOA,CACR,GACJ,EAkCCK,kBAhCwB,SAAA9B,GACxB,OAAOqB,EAAAA,GAAAA,IAAA,UACGH,EADH,oBACuBlB,EADvB,4BACkDmB,IACtDZ,MAAK,SAAAe,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAlB,MAAK,SAAAkB,GACJ,OAAOA,EAAKC,OACb,GACJ,EAqBCK,eAnBqB,SAAA/B,GACrB,OAAOqB,EAAAA,GAAAA,IAAA,UACGH,EADH,oBACuBlB,EADvB,4BACkDmB,IACtDZ,MAAK,SAAAe,GACJ,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAMF,EAASC,QAE3B,OAAOD,EAASG,IACjB,IACAlB,MAAK,SAAAkB,GACJ,OAAOA,EAAKtB,IACb,GACJ,GAUD,K","sources":["components/Cast/Cast.styles.js","components/Cast/Cast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport API from 'services/api';\nimport { StyledLi } from './Cast.styles';\nimport defaultFace from 'images/defaultFace.png';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    API.fetchMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n  return (\n    <ul>\n      {cast.map(({ id, name, character, profile_path }) => (\n        <StyledLi key={id}>\n          {profile_path ? (\n            <img\n              alt=\"actor\"\n              src={`${IMAGE_BASE_URL}${profile_path}`}\n              width=\"100\"\n            />\n          ) : (\n            <img src={defaultFace} alt=\"defaultFace\" width=\"100\" height=\"150\" />\n          )}\n          <span>{name}</span>\n          <span>Character: {character}</span>\n        </StyledLi>\n      ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'http://api.themoviedb.org';\nconst API_KEY = '35b67d916044ed61f84d01dde3676d84';\n// const axios = require('axios').default;\n\nconst fetchTrendingMovies = () => {\n  return axios\n    .get(`${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchAllMovies = queryTitle => {\n  return axios\n    .get(`${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${queryTitle}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchMovieInfo = movieId => {\n  return axios\n    .get(`${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data;\n    });\n};\n\nconst fetchMovieReviews = movieId => {\n  return axios\n    .get(`${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.results;\n    });\n};\n\nconst fetchMovieCast = movieId => {\n  return axios\n    .get(`${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status !== 200) {\n        throw new Error(response.status);\n      }\n      return response.data;\n    })\n    .then(data => {\n      return data.cast;\n    });\n};\n\nconst API = {\n  fetchTrendingMovies,\n  fetchAllMovies,\n  fetchMovieInfo,\n  fetchMovieReviews,\n  fetchMovieCast,\n};\n\nexport default API;\n\n// function fetchPokemon(name) {\n//   return fetch(`https://pokeapi.co/api/v2/pokemon/${name}`).then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     }\n\n//     return Promise.reject(new Error(`Нет покемона с именем ${name}`));\n//   });\n// }\n\n// const api = {\n//   fetchPokemon,\n// };\n\n// export default api;\n"],"names":["StyledLi","styled","movieId","useParams","useState","cast","setCast","useEffect","API","then","map","id","name","character","profile_path","alt","src","width","defaultFace","height","BASE_URL","API_KEY","fetchTrendingMovies","axios","response","status","Error","data","results","fetchAllMovies","queryTitle","fetchMovieInfo","fetchMovieReviews","fetchMovieCast"],"sourceRoot":""}